# ===============
# === QUARKUS ===
# ===============
quarkus.http.port=8080
quarkus.http.root-path=/api
quarkus.http.non-application-root-path=/q
quarkus.log.level=INFO


# ===============
# === OPENAPI ===
# ===============
quarkus.smallrye-openapi.servers=http://localhost:8080
quarkus.smallrye-openapi.info-title=Event API
quarkus.swagger-ui.always-include=true
quarkus.swagger-ui.filter=true


# ================
# === DATABASE ===
# ================
quarkus.datasource.metrics.enabled=true
quarkus.datasource.db-kind=postgresql
quarkus.datasource.jdbc.driver=org.postgresql.Driver
quarkus.datasource.jdbc.min-size=0
quarkus.datasource.jdbc.max-size=50
quarkus.datasource.jdbc.enable-metrics=true
quarkus.hibernate-orm.packages=id.labstech.event.model
quarkus.hibernate-orm.database.generation=none
quarkus.hibernate-orm.jdbc.statement-batch-size=1000


# ====================
# ===== SCHEDULE =====
# ====================
schedule.status=enable
schedule.cek.topup.payment=3m


# ====================
# === KAFKA CONFIG ===
# ====================
namespace=default
mp.messaging.incoming.token-update-in.topic=${namespace}-token-update
mp.messaging.incoming.token-update-in.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.token-update-in.connector=smallrye-kafka
mp.messaging.incoming.token-update-in.failure-strategy=dead-letter-queue
mp.messaging.incoming.token-update-in.dead-letter-queue.topic=${namespace}token-update-dlq

mp.messaging.incoming.token-status-update-in.topic=${namespace}-token-status-update
mp.messaging.incoming.token-status-update.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.token-status-update.connector=smallrye-kafka
mp.messaging.incoming.token-status-update-in.failure-strategy=dead-letter-queue
mp.messaging.incoming.token-status-update-in.dead-letter-queue.topic=${namespace}token-status-update-dlq

mp.messaging.outgoing.qr-paid-out.topic=${namespace}-qr-paid
mp.messaging.outgoing.qr-paid-out.value.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.qr-paid-out.connector=smallrye-kafka

mp.messaging.outgoing.push-notification-out.topic=${namespace}-push-notification
mp.messaging.outgoing.push-notification-out.value.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.push-notification-out.connector=smallrye-kafka

# ====================
# ====== OTHER =======
# ====================

loyalty.base.url=http://loyalty-service:8080/api
user.base.url=http://user-service:8080/api
core.base.url=http://core-service:8080/api
export.max.limit=10000
aes.gcm.secret.key=95B739A029E4572019716CB1C4C4CF99


quarkus.hibernate-orm.database.default-schema=event_schema
quarkus.hibernate-orm.database.generation=drop-and-create
quarkus.hibernate-orm.database.generation.create-schemas=true
quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/unit
quarkus.datasource.username=postgres
quarkus.datasource.password=postgres

# quarkus.datasource.jdbc.url=jdbc:postgresql://ep-floral-snow-134839.ap-southeast-1.aws.neon.tech/farid
# quarkus.datasource.username=faridsatria24
# quarkus.datasource.password=IxqwyvX18ZmB

quarkus.http.host=0.0.0.0
quarkus.http.port=9085
quarkus.smallrye-openapi.servers=http://localhost:9085
# quarkus.hibernate-orm.log.sql=true
kafka.bootstrap.servers=localhost:9092

greeting.name=COK

pin.length=6
header.customId={\"userId\":\"b82f89a7-6dc5-43b7-9f32-f98ae728b5a1\",\"memberCode\":\"TRIAL123\",\"email\":\"someone@example.com\",\"isEmailVerified\":true,\"mobilePhoneNumber\":null,\"isMobilePhoneNumberVerified\":false,\"name\":\"JohnDoe\",\"gender\":\"M\",\"dob\":\"1990-02-13 12:00\",\"deviceId\":\"29bb623e-ede9-4d24-9123-870d779a13fd\"}
# b82f89a7-6dc5-43b7-9f32-f98ae728b5a1
# dda57c38-e924-4aad-bd39-a230362ebe59