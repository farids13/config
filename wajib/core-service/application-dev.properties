#=== QUARKUS ===
quarkus.http.port=8080
quarkus.http.root-path=/api
quarkus.http.non-application-root-path=/q
quarkus.log.level=INFO


#=== OPENAPI ===
quarkus.smallrye-openapi.servers=http://localhost:8080
quarkus.smallrye-openapi.info-title=Core API
quarkus.swagger-ui.always-include=true
quarkus.swagger-ui.filter=true


#=== DATABASE ===
quarkus.datasource.metrics.enabled=true
quarkus.datasource.db-kind=postgresql
quarkus.datasource.jdbc.driver=org.postgresql.Driver
quarkus.datasource.jdbc.min-size=0
quarkus.datasource.jdbc.max-size=50
quarkus.datasource.jdbc.enable-metrics=true
quarkus.hibernate-orm.packages=id.labstech.core.model
quarkus.hibernate-orm.database.generation=none
quarkus.hibernate-orm.jdbc.statement-batch-size=1000

esb.token.legit= 
esb.token.ismaya=


#=== KAFKA CONFIG ===
namespace=default

mp.messaging.outgoing.req-syn-branch-out.topic=${namespace}-req-syn-branch
mp.messaging.outgoing.req-syn-branch-out.connector=smallrye-kafka
mp.messaging.outgoing.req-syn-branch-out.value.serializer=org.apache.kafka.common.serialization.StringSerializer

mp.messaging.outgoing.data-syn-out.topic=${namespace}-data-syn
mp.messaging.outgoing.data-syn-out.connector=smallrye-kafka
mp.messaging.outgoing.data-syn-out.value.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.data-syn-out.merge=true

mp.messaging.outgoing.req-syn-menu-out.topic=${namespace}-req-syn-menu
mp.messaging.outgoing.req-syn-menu-out.deserializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.req-syn-menu-out.connector=smallrye-kafka
mp.messaging.outgoing.req-syn-menu-out.merge=true

mp.messaging.outgoing.push-notification-out.topic=${namespace}-push-notification-schedule
mp.messaging.outgoing.push-notification-out.connector=smallrye-kafka
mp.messaging.outgoing.push-notification-out.value.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.push-notification-out.merge=true

mp.messaging.outgoing.send-email-out.topic=${namespace}-send-email
mp.messaging.outgoing.send-email-out.connector=smallrye-kafka
mp.messaging.outgoing.send-email-out.value.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.send-email-out.merge=true

mp.messaging.outgoing.update-menu-delivery-out.topic=${namespace}-update-menu-delivery
mp.messaging.outgoing.update-menu-delivery-out.value.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.update-menu-delivery-out.connector=smallrye-kafka

mp.messaging.outgoing.deleted-brand-out.topic=${namespace}-deleted-brand
mp.messaging.outgoing.deleted-brand-out.value.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.deleted-brand-out.connector=smallrye-kafka

mp.messaging.outgoing.deleted-outlet-out.topic=${namespace}-deleted-outlet
mp.messaging.outgoing.deleted-outlet-out.value.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.deleted-outlet-out.connector=smallrye-kafka

mp.messaging.outgoing.deleted-product-out.topic=${namespace}-deleted-product
mp.messaging.outgoing.deleted-product-out.value.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.deleted-product-out.connector=smallrye-kafka

mp.messaging.outgoing.deleted-category-out.topic=${namespace}-deleted-category
mp.messaging.outgoing.deleted-category-out.value.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.deleted-category-out.connector=smallrye-kafka

mp.messaging.outgoing.story-like-out.topic=${namespace}-story-like
mp.messaging.outgoing.story-like-out.value.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.story-like-out.connector=smallrye-kafka

mp.messaging.outgoing.story-dislike-out.topic=${namespace}-story-dislike
mp.messaging.outgoing.story-dislike-out.value.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.story-dislike-out.connector=smallrye-kafka

mp.messaging.outgoing.story-share-out.topic=${namespace}-story-share
mp.messaging.outgoing.story-share-out.value.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.story-share-out.connector=smallrye-kafka

mp.messaging.outgoing.story-comment-out.topic=${namespace}-story-comment
mp.messaging.outgoing.story-comment-out.value.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.story-comment-out.connector=smallrye-kafka

mp.messaging.outgoing.story-view-out.topic=${namespace}-story-view
mp.messaging.outgoing.story-view-out.value.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.story-view-out.connector=smallrye-kafka


#=== Rest Client ===#
quarkus.rest-client."id.labstech.core.client.UserServiceClient".url=
quarkus.rest-client."id.labstech.core.client.UserServiceClient".scope=javax.inject.Singleton

quarkus.rest-client."id.labstech.order.client.OrderServiceClient".url=
quarkus.rest-client."id.labstech.order.client.OrderServiceClient".scope=javax.inject.Singleton

quarkus.rest-client."id.labstech.core.client.LoyaltyServiceClient".url=
quarkus.rest-client."id.labstech.core.client.LoyaltyServiceClient".scope=javax.inject.Singleton


quarkus.cache.caffeine."getOutletPageDineIn".expire-after-write=60M
quarkus.cache.caffeine."getWidget".expire-after-write=60M
quarkus.cache.caffeine."widgetData".expire-after-write=1440M

#=== distance limit delivery ===#
distance.limit.delivery = 15

#=== distance limit pop up scan qr in meter ===#
distance.limit.popUp.scanQr=100

#=== scheduler ===#
scheduler.product.update=0 0 4 * * ?
scheduler.outlet.update=0 0 5 * * ?
scheduler.story.update=60m
scheduler.delete.logger.error=1 0 0 * * ?
schedule.status = disable

#=== base url ===#
event.base.url=http://event-service:8080/api

custom.visitPurpose.name = Delivery_Dev


#===== Local Config ====
%dev.quarkus.hibernate-orm.database.default-schema=core_schema

%dev.quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/postgres
%dev.quarkus.datasource.username=postgres
%dev.quarkus.datasource.password=postgres

# %dev.quarkus.datasource.jdbc.url=jdbc:postgresql://ep-floral-snow-134839.ap-southeast-1.aws.neon.tech/farid
# %dev.quarkus.datasource.username=faridsatria24
# %dev.quarkus.datasource.password=IxqwyvX18ZmB

%dev.quarkus.hibernate-orm.database.generation=update
# %dev.quarkus.hibernate-orm.log.sql=true
%dev.quarkus.http.port=7080
%dev.quarkus.smallrye-openapi.servers=http://localhost:7080
%dev.kafka.bootstrap.servers=localhost:9092
%dev.esb.token.legit=asd
%dev.esb.token.ismaya=asd
quarkus.rest-client."id.labstech.core.client.StorageServiceClient".url=http://localhost:8082/
quarkus.rest-client."id.labstech.core.client.StorageServiceClient".scope=javax.inject.Singleton
%dev.quarkus.rest-client."id.labstech.core.client.OrderServiceClient".url=http://localhost:7081/
%dev.quarkus.rest-client."id.labstech.core.client.OrderServiceClient".scope=javax.inject.Singleton
%dev.quarkus.rest-client."id.labstech.core.client.UserServiceClient".url=http://localhost:8082/
%dev.quarkus.rest-client."id.labstech.core.client.UserServiceClient".scope=javax.inject.Singleton
%dev.quarkus.rest-client."id.labstech.core.client.LoyaltyServiceClient".url=http://localhost:7083/
%dev.quarkus.rest-client."id.labstech.core.client.LoyaltyServiceClient".scope=javax.inject.Singleton
%dev.pin.length=6
%dev.header.customId={\"userId\":\"b82f89a7-6dc5-43b7-9f32-f98ae728b5a1\",\"email\":\"someone@example.com\",\"isEmailVerified\":true,\"mobilePhoneNumber\":null,\"isMobilePhoneNumberVerified\":false,\"name\":\"JohnDoe\",\"gender\":\"M\",\"dob\":\"1990-01-01\",\"deviceId\":\"29bb623e-ede9-4d24-9123-870d779a13fd\"}

# b82f89a7-6dc5-43b7-9f32-f98ae728b5a1